name: Build and Deploy project

on:
  push:
    branches: ["feature/ci-cd"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build & push image to registry
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      packages: write
      
    steps:
      - name: 'Checkout Github Action'
        uses: actions/checkout@v3
      
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: src/RaceControl
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: 
      name: production
      url: https://rc.justinvanderkruit.nl/
    permissions:
      contents: read
      packages: read
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Upload docker-compose.yml to host
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "docker-compose.yml"
          target: "~/"

      - name: Pull project image on host and start container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
            docker compose down --remove-orphans
            docker compose pull
            docker compose up -d
            docker logout ${{ env.REGISTRY }}